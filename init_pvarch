#!/usr/bin/env python
#
# creates initial MySQL databases for EpicsArchiver

import os
import sys
import time
import getpass
import warnings

try:
    from EpicsArchiver import util, SimpleDB
except ImportError:
    xx, yy, zz = sys.exc_info()
    sys.excepthook(xx,yy,zz)
    print "==\n==  EpicsArchiver cannot run! \n=="
    sys.exit(1)

try:
    ## from EpicsArchiver import config
    import config
except ImportError:
    xx, yy, zz = sys.exc_info()
    sys.excepthook(xx,yy,zz)
    print "==\n==  EpicsArchiver cannot read configuration file (config.py)! \n=="
    sys.exit(1)

welcome_msg = """
 **************************************************************
 Initializing the MySQL database tables for the EpicsArchiver 

 The EpicsArchiver will use mysql host, username, and password:
    host = %(dbhost)s
    user = %(dbuser)s
    pass = %(dbpass)s

 You are about to be prompted for a username / password        
 of a mysql account that can grant permissions to %(dbuser)s 

 *** Warning *** Warning *** Warning *** Warning *** Warning *** 
 This will destroy the existing databases %(master_db)s

 Use Ctrl-C now if you do not want these databases destroyed!
 **************************************************************
"""

init_sql       = 'pvarch_init.sql'
master_current =  "update info set db='%s' where process='archive'" 
master_run0    =  "insert into runs values (1,'%s','%s',%f,%f)"

def initialize(config):
    print welcome_msg % config.__dict__
    
    warnings.filterwarnings("ignore", "Unknown table.*")

    super_user = getpass.getuser()
    super_pass = None

    try:
        answer = raw_input('mysql username [%s]:' % super_user)
    except KeyboardInterrupt:
        print 'exiting...'
        sys.exit(2)
    if answer is not '':  super_user = answer

    try:
        super_pass  = getpass.getpass('mysql password for %s:' % super_user)
    except KeyboardInterrupt:
        print 'exiting...'
        sys.exit(2)

    try:
        xdb   = SimpleDB(user=super_user, dbname='mysql',
                         passwd=super_pass, host = config.dbhost)
    except:
        raise
        print 'error starting mysql. Invalid Username/Password? Is mysql running?'
        sys.exit(1)


    grant_kws = {'user':config.dbuser,
                 'passwd':config.dbpass,
                 'host':config.dbhost}


    print 'creating database %s :' % config.master_db,
    xdb.create_and_use(config.master_db) 

    xdb.source_file(init_sql)

    print 'granting permissions...',
    xdb.grant(db=config.master_db, **grant_kws)

    firstnote = "%s to the indefinite future" % time.ctime()
    firstdb   =  config.dat_format % (config.dat_prefix,1)

    print 'done.\nsetting first run to %s...' % firstdb,
    xdb.execute(master_current % firstdb)
    xdb.execute(master_run0 % (firstdb, firstnote,
                               time.time(), util.MAX_EPOCH))
    
    print 'done.\ncreating database %s...' % firstdb,
    from lib.ArchiveMaster import ArchiveMaster
    m = ArchiveMaster()
    m.create_emptydb(dbname=firstdb)

    print 'done.\n\nReady to start EpicsArchiver!'

initialize(config)
